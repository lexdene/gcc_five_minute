《gcc五分钟系列》第一节：前言

	为啥要介绍GCC呢？
	其实这个事源于光哥问我的一个问题：
	“C语言中宏定义影响的范围有多大？”
	
	现在，IDE的易用与普及，使coder们越来越远离命令行的编译方式。IDE确实方便，这个不需要置疑（wu yong置疑，四个字有两个我不会写……），因为我本人也经常用IDE。不过IDE造成的问题是，很多原理性的东西大家可能并不了解。我在这里只是为了简单介绍一下。
	本人虽然已经二十多岁了，可是只有高中文凭。实力有限，水平也有限，错误在所难免，希望大家看见以后能帮忙指出。
	本系列文章不介绍基础知识，所以在阅读本系列文章前需要有以下知识：
		1、C/C++。如果你不会C和C++，我会表示压力很大的……
		2、shell（bash）。因为都是在命令行下编译，所以你至少得会命令行啊。不用会的太多，基本的几个命令知道就行。
		3、我需要你能够区分以下几个概念：“编译器”、“链接器”、“SDK”、“IDE”。可以上谷歌百度一下，也可以参见本人博客的另一篇博客：《编辑器，编译器，SDK与IDE》http://elephantliu.blog.51cto.com/1107116/559415
		4、GNU。这个不需要我介绍吧？如果这个你不知道的话，我也不知道说什么好了……。
		5、理查德·马修·斯托曼。GCC的最初作者，自由软件运动的精神领袖，GNU计划及自由软件基金会（FSF）的创立者。
	
	好了，下面简单介绍一下我们的GCC吧。
	
	GCC刚开始的名字叫 GNU编译器套装（GNU Compiler Collection），是大神 理查德·马修·斯托曼 在1985年写的。那时候斯托曼只是为了写个好用的C语言编译器。
	后来呢，GCC不止能编译C语言，开始能够编译各种语言，包括：C++、Fortran、Pascal、Objective-C、Java、Ada和Go等。这个时候呢，它的名字也改了。改成叫GNU编译器套装（GNU Compiler Collection），但是缩写没变，还是GCC。
	
	不过，我们这个系列文章使用是它本来的概念：GNU C Compiler。因为我们止以C／C++为例介绍GCC的使用。
	
	五分钟到了，下课。
